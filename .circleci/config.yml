---
version: 2.1

orbs:
  executor-tools: twdps/executor-tools@1.10.0
  terraform: twdps/terraform@0.15.0
  op: twdps/onepassword@1.2.0
  do: twdps/pipeline-events@2.0.0

# ==== global pipeline parameters

parameters:
  terraform-version:
    description: terraform version for all jobs
    type: string
    default: "1.5.1"
  context:
    description: circleci context for all jobs
    type: string
    default: craft-infra
  executor-image:
    description: image to use for terraform runs
    type: string
    default: twdps/circleci-infra-gcp:alpine-stable

# ==== triggers
on-push-main: &on-push-main
  branches:
    only: /main/
  tags:
    ignore: /.*/

on-tag-main: &on-tag-main
  branches:
    ignore: /.*/
  tags:
    only: /.*/

commands:
  set-environment:
    description: generate environment credentials and configuration from templates
    parameters:
      account:
        description: account to be configured
        type: string
      gcp_cred_config_file_path:
        type: string
        default: /home/circleci/gcp_cred_config.json
      oidc_token_file_path:
        type: string
        default: /home/circleci/oidc_token.json
    steps:
      - op/env:
          env-file: op.<< parameters.account >>.env
      - run:
          name: set ~/.terraformrc
          command: op inject -i tpl/terraformrc.tpl -o ~/.terraformrc
      - run:
          name: set << parameters.account >> environment variables
          command: op inject -i environments/gcp-platform-<< parameters.account >>.auto.tfvars.json.tpl -o gcp-platform-<< parameters.account >>.auto.tfvars.json
      - run:
          name: Authenticate GCP
          command: bash scripts/gcp_authenticate.sh << parameters.oidc_token_file_path >> << parameters.gcp_cred_config_file_path >>
jobs:
  validate configuration:
    description: |
      bats tests of the resulting infrastructure resources.
    docker:
      - image: << pipeline.parameters.executor-image >>
    environment:
      TF_WORKSPACE: psk-gcp-iam-profiles-<< parameters.account >>
    shell: op run --env-file op.<< parameters.account >>.env -- /bin/sh -eo pipefail
    parameters:
      account:
        description: sandbox or production account configuration
        type: string
    steps:
      - checkout
      - setup_remote_docker
      - set-environment:
          account: << parameters.account >>
      - run:
          name: test << parameters.account >> configuration
          command: bash scripts/test_configuration.sh << parameters.account >>
  update_git_tag:
    description: |
      update git tag on passing sandbox build
    docker:
      - image: << pipeline.parameters.executor-image >>
    parameters:
        semver_update:
          description: |
            semver update type for git tag on passing sandbox build
          type: string
          default: "minor"
    steps:
      - checkout
      - setup_remote_docker
      - add_ssh_keys:
          fingerprints:
            - "db:07:03:a9:8a:12:52:1b:ca:a8:8f:d7:2f:de:7a:76"
      - run:
          name: setup git config
          command: |
            git config user.email "twdpsio"
            git config user.name "CircleCI Job"
      - run:
          name: update git tag
          command: bash scripts/tag_repo.sh << parameters.semver_update >>

workflows:
  version: 2

  deploy profiles and roles to sandbox:
    jobs:
      - terraform/plan:
          name: sandbox change plan
          context: << pipeline.parameters.context >>
          shell: op run --env-file op.sandbox.env -- /bin/bash -eo pipefail
          tfc-local-execution-mode: true
          tfc-organization: twdps
          tfc-workspace-name: psk-gcp-iam-profiles-sandbox
          workspace: sandbox
          executor-image: << pipeline.parameters.executor-image >>
          terraform-version: << pipeline.parameters.terraform-version >>
          before-terraform:
            - set-environment:
                account: sandbox
          filters: *on-push-main

      - approve sandbox changes:
          type: approval
          requires:
            - sandbox change plan
          filters: *on-push-main

      - terraform/apply:
          name: apply sandbox changes
          context: << pipeline.parameters.context >>
          shell: op run --env-file op.sandbox.env -- /bin/bash -eo pipefail
          workspace: sandbox
          executor-image: << pipeline.parameters.executor-image >>
          terraform-version: << pipeline.parameters.terraform-version >>
          before-terraform:
            - set-environment:
                account: sandbox
          after-terraform:
            - run:
                name: store workload identity information for state
                command: bash scripts/store_gcp_identity_config.sh
            - do/slack-webhook:
                message: lab-gcp-iam-profiles sandbox deployment
                webhook-url: $LAB_EVENTS_CHANNEL_WEBHOOK
          requires:
            - approve sandbox changes
          filters: *on-push-main

      - validate configuration:
          name: test sandbox iam profiles configuration
          context: << pipeline.parameters.context >>
          account: sandbox
          requires:
            - apply sandbox changes
          filters: *on-push-main

      - approve tag:
          type: approval
          requires:
            - test sandbox iam profiles configuration
          filters: *on-push-main

      - update_git_tag:
          name: tag sandbox iam profiles configuration
          context: << pipeline.parameters.context >>
          requires:
            - approve tag
          filters: *on-push-main

  deploy roles to prod:
    jobs:
      - terraform/plan:
          name: prod change plan
          context: << pipeline.parameters.context >>
          shell: op run --env-file op.prod.env -- /bin/bash -eo pipefail
          tfc-local-execution-mode: true
          tfc-organization: twdps
          tfc-workspace-name: psk-gcp-iam-profiles-prod
          workspace: prod
          executor-image: << pipeline.parameters.executor-image >>
          terraform-version: << pipeline.parameters.terraform-version >>
          before-terraform:
            - set-environment:
                account: prod
          filters: *on-tag-main

      - approve prod changes:
          type: approval
          requires:
            - prod change plan
          filters: *on-tag-main

      - terraform/apply:
          name: apply prod changes
          context: << pipeline.parameters.context >>
          shell: op run --env-file op.prod.env -- /bin/bash -eo pipefail
          workspace: prod
          executor-image: << pipeline.parameters.executor-image >>
          terraform-version: << pipeline.parameters.terraform-version >>
          before-terraform:
            - set-environment:
                account: prod
          after-terraform:
            - do/slack-webhook:
                message: lab-gcp-iam-profiles prod release
                webhook-url: $LAB_EVENTS_CHANNEL_WEBHOOK
          requires:
            - approve prod changes
          filters: *on-tag-main

      - validate configuration:
          name: test prod gcp iam profiles configuration
          context: << pipeline.parameters.context >>
          account: prod
          requires:
            - apply prod changes
          filters: *on-tag-main

#  generate-release-notes:
#    jobs:
#      - executor-tools/release:
#          name: release-lab-gcp-iam-profiles
#          context: << pipeline.parameters.context >>
#          shell: op run --env-file op.prod.env -- /bin/bash -eo pipefail
#          on-tag: true
#          filters: *on-tag-main

#  nightly iam profiles configuration validation:
#    triggers:
#      - schedule:
#          cron: "0 1 * * *"
#          filters:
#            branches:
#              only:
#                - main
#    jobs:
#      - validate configuration:
#          name: nightly sandbox gcp iam profiles validation
#          context: << pipeline.parameters.context >>
#          account: sandbox
#      - validate configuration:
#          name: nightly prod gcp iam profiles validation
#          context: << pipeline.parameters.context >>
#          account: prod
